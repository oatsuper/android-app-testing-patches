
project packages/apps/Launcher2/
diff --git a/src/com/android/launcher2/AppsCustomizePagedView.java b/src/com/android/launcher2/AppsCustomizePagedView.java
index 099c1ac..22f40c2 100644
--- a/src/com/android/launcher2/AppsCustomizePagedView.java
+++ b/src/com/android/launcher2/AppsCustomizePagedView.java
@@ -49,6 +49,7 @@ import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewDebug;
 import android.view.animation.AccelerateInterpolator;
 import android.widget.GridLayout;
 import android.widget.ImageView;
@@ -400,6 +401,27 @@ public class AppsCustomizePagedView extends PagedViewWithDraggableItems implemen
         mLauncher.showFirstRunAllAppsCling(pos);
 
     }
+    
+    protected void dumpClass(ViewDebug.DumpControl pdc) {
+        super.dumpClass(pdc);
+        pdc.writeEntry("mNumAppsPages", mNumAppsPages);
+        pdc.writeEntry("mNumWidgetPages", mNumWidgetPages);
+        /*
+        for(int page = 0; page < mNumAppsPages; page++) {
+            PagedViewCellLayout layout = (PagedViewCellLayout) getPageAt(page);
+            layout.setPageNo(page);
+        }
+        for(int page = 0; page < mNumWidgetPages; page++) {
+        	PagedViewGridLayout layout = (PagedViewGridLayout) getPageAt(page + mNumAppsPages);
+        	layout.setPageNo(page);
+        }
+        */
+        final int totalPages = mNumAppsPages + mNumWidgetPages;
+        for(int page = 0; page < totalPages; page++) {
+        	Page iPage = (Page) getPageAt(page);
+        	iPage.setPageNo(page);
+        }
+    }
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
diff --git a/src/com/android/launcher2/CellLayout.java b/src/com/android/launcher2/CellLayout.java
index 54fdcc5..7c12271 100644
--- a/src/com/android/launcher2/CellLayout.java
+++ b/src/com/android/launcher2/CellLayout.java
@@ -13,7 +13,21 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
+/*
+ * Copyright (C) 2011 Wind River Systems, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package com.android.launcher2;
 
 import android.animation.Animator;
@@ -1840,6 +1854,17 @@ out:            for (int i = x; i < x + spanX - 1 && x < xCount; i++) {
         @ViewDebug.ExportedProperty
         int y;
 
+
+        protected void dumpClass(ViewDebug.DumpControl dp) {
+            dp.writeEntry("cellHSpan", cellHSpan);
+            dp.writeEntry("cellVSpan", cellVSpan);
+            dp.writeEntry("cellX", cellX);
+            dp.writeEntry("cellY", cellY);
+            dp.writeEntry("x", x);
+            dp.writeEntry("y", y);
+            super.dumpClass(dp);
+        }
+        
         boolean dropped;
 
         public LayoutParams(Context c, AttributeSet attrs) {
diff --git a/src/com/android/launcher2/PagedView.java b/src/com/android/launcher2/PagedView.java
index 7be19bf..943f65a 100644
--- a/src/com/android/launcher2/PagedView.java
+++ b/src/com/android/launcher2/PagedView.java
@@ -36,6 +36,7 @@ import android.view.MotionEvent;
 import android.view.VelocityTracker;
 import android.view.View;
 import android.view.ViewConfiguration;
+import android.view.ViewDebug;
 import android.view.ViewGroup;
 import android.view.ViewParent;
 import android.view.accessibility.AccessibilityEvent;
@@ -773,6 +774,12 @@ public abstract class PagedView extends ViewGroup {
         }
     }
 
+    protected void dumpClass(ViewDebug.DumpControl dpc) {
+        super.dumpClass(dpc);
+        dpc.writeEntry("mCurrentPage", mCurrentPage);
+        dpc.writeEntry("mNextPage", mNextPage);
+    }
+
     /**
      * If one of our descendant views decides that it could be focused now, only
      * pass that along if it's on the current page.
diff --git a/src/com/android/launcher2/PagedViewCellLayout.java b/src/com/android/launcher2/PagedViewCellLayout.java
index 2ef7e29..38d5faa 100644
--- a/src/com/android/launcher2/PagedViewCellLayout.java
+++ b/src/com/android/launcher2/PagedViewCellLayout.java
@@ -13,7 +13,21 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
+/*
+ * Copyright (C) 2011 Wind River Systems, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package com.android.launcher2;
 
 import android.content.Context;
@@ -396,6 +410,18 @@ public class PagedViewCellLayout extends ViewGroup implements Page {
     protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams p) {
         return new PagedViewCellLayout.LayoutParams(p);
     }
+    
+    private int mPageNo = -1;
+    
+    @Override
+    public void setPageNo(int pageno) {
+    	mPageNo = pageno;
+    }
+    
+    protected void dumpClass(ViewDebug.DumpControl pdc) {
+    	super.dumpClass(pdc);
+    	pdc.writeEntry("mPageNo", mPageNo);
+    }
 
     public static class LayoutParams extends ViewGroup.MarginLayoutParams {
         /**
@@ -437,6 +463,16 @@ public class PagedViewCellLayout extends ViewGroup implements Page {
         @ViewDebug.ExportedProperty
         int y;
 
+        protected void dumpClass(ViewDebug.DumpControl dp) {
+            dp.writeEntry("cellHSpan", cellHSpan);
+            dp.writeEntry("cellVSpan", cellVSpan);
+            dp.writeEntry("cellX", cellX);
+            dp.writeEntry("cellY", cellY);
+            dp.writeEntry("x", x);
+            dp.writeEntry("y", y);
+            super.dumpClass(dp);
+        }
+
         public LayoutParams() {
             super(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
             cellHSpan = 1;
@@ -514,4 +550,5 @@ interface Page {
     public void removeAllViewsOnPage();
     public void removeViewOnPageAt(int i);
     public int indexOfChildOnPage(View v);
+    public void setPageNo(int pageno);
 }
diff --git a/src/com/android/launcher2/PagedViewGridLayout.java b/src/com/android/launcher2/PagedViewGridLayout.java
index 93626f0..38bd54e 100644
--- a/src/com/android/launcher2/PagedViewGridLayout.java
+++ b/src/com/android/launcher2/PagedViewGridLayout.java
@@ -19,6 +19,7 @@ package com.android.launcher2;
 import android.content.Context;
 import android.view.MotionEvent;
 import android.view.View;
+import android.view.ViewDebug;
 import android.widget.FrameLayout;
 import android.widget.GridLayout;
 
@@ -103,6 +104,18 @@ public class PagedViewGridLayout extends GridLayout implements Page {
     public int indexOfChildOnPage(View v) {
         return indexOfChild(v);
     }
+    
+    private int mPageNo = -1;
+    
+    @Override
+    public void setPageNo(int pageno) {
+    	mPageNo = pageno;
+    }
+    
+    protected void dumpClass(ViewDebug.DumpControl pdc) {
+    	super.dumpClass(pdc);
+    	pdc.writeEntry("mPageNo", mPageNo);
+    }
 
     public static class LayoutParams extends FrameLayout.LayoutParams {
         public LayoutParams(int width, int height) {

