
project packages/apps/Browser/
diff --git a/src/com/android/browser/NavTabScroller.java b/src/com/android/browser/NavTabScroller.java
index c940bf5..ecc0f4c 100644
--- a/src/com/android/browser/NavTabScroller.java
+++ b/src/com/android/browser/NavTabScroller.java
@@ -13,7 +13,21 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-
+/*
+ * Copyright (C) 2011 Wind River Systems, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package com.android.browser;
 
 
@@ -27,6 +41,7 @@ import android.graphics.Canvas;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.view.View;
+import android.view.ViewDebug;
 import android.view.ViewGroup;
 import android.view.animation.DecelerateInterpolator;
 import android.widget.BaseAdapter;
@@ -536,6 +551,30 @@ public class NavTabScroller extends ScrollerView {
             }
         }
     }
+    
+    protected void dumpClass(ViewDebug vdp) {
+        super.dumpClass(vdp);
+        View child = null;
+        int mItemCount = mContentView.getChildCount();
+        int mFirstPosition = -1;
+        int mLastPosition = -1;
+
+        for (int i=0; i<mItemCount; i++) {
+            child = getChildAt(i);
+            if ( child != null ) {
+                if ( mFirstPosition < 0 &&
+                     child.getVisibility() == View.VISIBLE ) {
+                     mFirstPosition = i;
+                }
+                if ( child.getVisibility() == View.VISIBLE ) {
+                     mLastPosition = i;
+                }
+            }
+        }
+        vdp.writeEntry("mItemCount", mItemCount);
+        vdp.writeEntry("mFirstPosition", mFirstPosition);
+        vdp.writeEntry("mLastPosition", mLastPosition);
+    }
 
     static class ContentLayout extends LinearLayout {
 

